// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Định nghĩa model User
model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  email        String         @unique
  password     String
  roles        Role[]         @relation("UserRoles")
  UserRoles    UserRoles[]
  AccessToken  AccessToken[]
  RefreshToken RefreshToken[]
}

// Định nghĩa model Role
model Role {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  users     User[]      @relation("UserRoles")
  UserRoles UserRoles[]
}

// Định nghĩa mối quan hệ many-to-many giữa User và Role
model UserRoles {
  user_id Int
  role_id Int

  user User @relation(fields: [user_id], references: [id])
  role Role @relation(fields: [role_id], references: [id])

  assignedAt DateTime @default(now())
  assignedBy String

  @@id([user_id, role_id])
}

model AccessToken {
  id           Int           @id @default(autoincrement())
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  refreshToken RefreshToken?
}

model RefreshToken {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  accessToken AccessToken @relation(fields: [accessId], references: [id])
  accessId    Int         @unique
}
